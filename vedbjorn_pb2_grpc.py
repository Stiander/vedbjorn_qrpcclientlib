# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import libs.qrpcclientlib.vedbjorn_pb2 as vedbjorn__pb2


class VedbjornFunctionsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPrices = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetPrices',
                request_serializer=vedbjorn__pb2.Nothing.SerializeToString,
                response_deserializer=vedbjorn__pb2.AllPrices.FromString,
                )
        self.SetPrices = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/SetPrices',
                request_serializer=vedbjorn__pb2.AllPrices.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.CoordinateToLocation = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/CoordinateToLocation',
                request_serializer=vedbjorn__pb2.Coordinate.SerializeToString,
                response_deserializer=vedbjorn__pb2.Location.FromString,
                )
        self.NameToLocation = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/NameToLocation',
                request_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
                response_deserializer=vedbjorn__pb2.Location.FromString,
                )
        self.LocationToGraph = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/LocationToGraph',
                request_serializer=vedbjorn__pb2.Coordinate.SerializeToString,
                response_deserializer=vedbjorn__pb2.Location.FromString,
                )
        self.FindCoordinatesInAddress = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/FindCoordinatesInAddress',
                request_serializer=vedbjorn__pb2.Location.SerializeToString,
                response_deserializer=vedbjorn__pb2.Location.FromString,
                )
        self.GetMarketInfo = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetMarketInfo',
                request_serializer=vedbjorn__pb2.Location.SerializeToString,
                response_deserializer=vedbjorn__pb2.MarketInfo.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetUser',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.User.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/CreateUser',
                request_serializer=vedbjorn__pb2.User.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/DeleteUser',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.VerifyUserEmailStart = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/VerifyUserEmailStart',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.VerifyUserEmail = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/VerifyUserEmail',
                request_serializer=vedbjorn__pb2.EmailVerificationCode.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.BuyRequestToUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/BuyRequestToUser',
                request_serializer=vedbjorn__pb2.BuyRequest.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetBuyRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetBuyRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.BuyRequest.FromString,
                )
        self.GetBuyRequestMatch = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetBuyRequestMatch',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.DeleteBuyRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/DeleteBuyRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.SellRequestToUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/SellRequestToUser',
                request_serializer=vedbjorn__pb2.SellRequest.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetSellRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetSellRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.SellRequest.FromString,
                )
        self.DeleteSellRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/DeleteSellRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetNewSellerDealInfoList = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetNewSellerDealInfoList',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.SellerDealInfoList.FromString,
                )
        self.GetOngoingSellerDealInfoList = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetOngoingSellerDealInfoList',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.SellerDealInfoList.FromString,
                )
        self.GetCompletedSells = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetCompletedSells',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.SellerDealInfoList.FromString,
                )
        self.GetNewSellerDealAccept = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetNewSellerDealAccept',
                request_serializer=vedbjorn__pb2.SellerDealAccept.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.DriveRequestToUser = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/DriveRequestToUser',
                request_serializer=vedbjorn__pb2.DriveRequest.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetDriveRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetDriveRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.DriveRequest.FromString,
                )
        self.DeleteDriveRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/DeleteDriveRequest',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.SetDriverNotAvailable = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/SetDriverNotAvailable',
                request_serializer=vedbjorn__pb2.UserContactInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.ShortCountryInfo = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/ShortCountryInfo',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.Counties.FromString,
                )
        self.NotifyDriverOnNewMission = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/NotifyDriverOnNewMission',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetPlannedRoute = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetPlannedRoute',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.Routes.FromString,
                )
        self.SetAcceptPlannedRoute = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/SetAcceptPlannedRoute',
                request_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetOngoingRoute = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetOngoingRoute',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.Routes.FromString,
                )
        self.GetCompletedRoutes = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetCompletedRoutes',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.RoutesList.FromString,
                )
        self.PushVisit = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/PushVisit',
                request_serializer=vedbjorn__pb2.VisitProof.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetVisit = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetVisit',
                request_serializer=vedbjorn__pb2.VisitIndex.SerializeToString,
                response_deserializer=vedbjorn__pb2.VisitProof.FromString,
                )
        self.GetDeliveryProof = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetDeliveryProof',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.VisitProof.FromString,
                )
        self.PushFeedbackComplaintNondelivery = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/PushFeedbackComplaintNondelivery',
                request_serializer=vedbjorn__pb2.FeedbackComplaintNondelivery.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetMessages = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetMessages',
                request_serializer=vedbjorn__pb2.MessageQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.Messages.FromString,
                )
        self.GetBuyRequestNotification = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetBuyRequestNotification',
                request_serializer=vedbjorn__pb2.MessageQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.Message.FromString,
                )
        self.PushFeedbackAcceptDelivery = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/PushFeedbackAcceptDelivery',
                request_serializer=vedbjorn__pb2.MessageQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.PushFeedbackRejectDelivery = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/PushFeedbackRejectDelivery',
                request_serializer=vedbjorn__pb2.FeedbackRejectDelivery.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetAllCompletedDeliveryInfoForBuyer = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetAllCompletedDeliveryInfoForBuyer',
                request_serializer=vedbjorn__pb2.MessageQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.FromString,
                )
        self.GetAllCompletedDeliveryInfoForBuyerAdm = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetAllCompletedDeliveryInfoForBuyerAdm',
                request_serializer=vedbjorn__pb2.MessageQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.FromString,
                )
        self.GetDeliveryReceipt = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetDeliveryReceipt',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetDeliveryReceiptAdm = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetDeliveryReceiptAdm',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetFinishedRouteReceipt = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetFinishedRouteReceipt',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetFinishedRouteInvoice = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetFinishedRouteInvoice',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetSellsReceipt = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetSellsReceipt',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetSellsInvoice = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetSellsInvoice',
                request_serializer=vedbjorn__pb2.DBQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.File.FromString,
                )
        self.GetPaymentInfo = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetPaymentInfo',
                request_serializer=vedbjorn__pb2.PaymentInfoQuery.SerializeToString,
                response_deserializer=vedbjorn__pb2.PaymentInfo.FromString,
                )
        self.UpdatePaymentInfo = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/UpdatePaymentInfo',
                request_serializer=vedbjorn__pb2.PaymentInfo.SerializeToString,
                response_deserializer=vedbjorn__pb2.PaymentInfo.FromString,
                )
        self.UpdateCompany = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/UpdateCompany',
                request_serializer=vedbjorn__pb2.Company.SerializeToString,
                response_deserializer=vedbjorn__pb2.Company.FromString,
                )
        self.GetCompany = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetCompany',
                request_serializer=vedbjorn__pb2.Company.SerializeToString,
                response_deserializer=vedbjorn__pb2.Company.FromString,
                )
        self.UpdateBatchSellRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/UpdateBatchSellRequest',
                request_serializer=vedbjorn__pb2.BatchSellRequest.SerializeToString,
                response_deserializer=vedbjorn__pb2.BatchSellRequest.FromString,
                )
        self.GetBatchSellRequest = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetBatchSellRequest',
                request_serializer=vedbjorn__pb2.BatchSellRequest.SerializeToString,
                response_deserializer=vedbjorn__pb2.BatchSellRequest.FromString,
                )
        self.OrderAdmMassEmails = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/OrderAdmMassEmails',
                request_serializer=vedbjorn__pb2.AdmMassEmails.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.SetSeasonOnOrOff = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/SetSeasonOnOrOff',
                request_serializer=vedbjorn__pb2.Name.SerializeToString,
                response_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                )
        self.GetSeasonOnOrOff = channel.unary_unary(
                '/vedbjorn.VedbjornFunctions/GetSeasonOnOrOff',
                request_serializer=vedbjorn__pb2.Nothing.SerializeToString,
                response_deserializer=vedbjorn__pb2.Name.FromString,
                )


class VedbjornFunctionsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CoordinateToLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NameToLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LocationToGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCoordinatesInAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyUserEmailStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyUserEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyRequestToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyRequestMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBuyRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellRequestToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSellRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewSellerDealInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOngoingSellerDealInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompletedSells(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewSellerDealAccept(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DriveRequestToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDriveRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDriveRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriverNotAvailable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShortCountryInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyDriverOnNewMission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlannedRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAcceptPlannedRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOngoingRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompletedRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushVisit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVisit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeliveryProof(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushFeedbackComplaintNondelivery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyRequestNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushFeedbackAcceptDelivery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushFeedbackRejectDelivery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCompletedDeliveryInfoForBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCompletedDeliveryInfoForBuyerAdm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeliveryReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeliveryReceiptAdm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFinishedRouteReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFinishedRouteInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellsReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellsInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePaymentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCompany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBatchSellRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBatchSellRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrderAdmMassEmails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSeasonOnOrOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSeasonOnOrOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VedbjornFunctionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrices,
                    request_deserializer=vedbjorn__pb2.Nothing.FromString,
                    response_serializer=vedbjorn__pb2.AllPrices.SerializeToString,
            ),
            'SetPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPrices,
                    request_deserializer=vedbjorn__pb2.AllPrices.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'CoordinateToLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.CoordinateToLocation,
                    request_deserializer=vedbjorn__pb2.Coordinate.FromString,
                    response_serializer=vedbjorn__pb2.Location.SerializeToString,
            ),
            'NameToLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.NameToLocation,
                    request_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                    response_serializer=vedbjorn__pb2.Location.SerializeToString,
            ),
            'LocationToGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.LocationToGraph,
                    request_deserializer=vedbjorn__pb2.Coordinate.FromString,
                    response_serializer=vedbjorn__pb2.Location.SerializeToString,
            ),
            'FindCoordinatesInAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCoordinatesInAddress,
                    request_deserializer=vedbjorn__pb2.Location.FromString,
                    response_serializer=vedbjorn__pb2.Location.SerializeToString,
            ),
            'GetMarketInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketInfo,
                    request_deserializer=vedbjorn__pb2.Location.FromString,
                    response_serializer=vedbjorn__pb2.MarketInfo.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.User.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=vedbjorn__pb2.User.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'VerifyUserEmailStart': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyUserEmailStart,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'VerifyUserEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyUserEmail,
                    request_deserializer=vedbjorn__pb2.EmailVerificationCode.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'BuyRequestToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyRequestToUser,
                    request_deserializer=vedbjorn__pb2.BuyRequest.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetBuyRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.BuyRequest.SerializeToString,
            ),
            'GetBuyRequestMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyRequestMatch,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'DeleteBuyRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBuyRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'SellRequestToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.SellRequestToUser,
                    request_deserializer=vedbjorn__pb2.SellRequest.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetSellRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.SellRequest.SerializeToString,
            ),
            'DeleteSellRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSellRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetNewSellerDealInfoList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewSellerDealInfoList,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.SellerDealInfoList.SerializeToString,
            ),
            'GetOngoingSellerDealInfoList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOngoingSellerDealInfoList,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.SellerDealInfoList.SerializeToString,
            ),
            'GetCompletedSells': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompletedSells,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.SellerDealInfoList.SerializeToString,
            ),
            'GetNewSellerDealAccept': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewSellerDealAccept,
                    request_deserializer=vedbjorn__pb2.SellerDealAccept.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'DriveRequestToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DriveRequestToUser,
                    request_deserializer=vedbjorn__pb2.DriveRequest.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetDriveRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDriveRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.DriveRequest.SerializeToString,
            ),
            'DeleteDriveRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDriveRequest,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'SetDriverNotAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriverNotAvailable,
                    request_deserializer=vedbjorn__pb2.UserContactInfo.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'ShortCountryInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ShortCountryInfo,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.Counties.SerializeToString,
            ),
            'NotifyDriverOnNewMission': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyDriverOnNewMission,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetPlannedRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlannedRoute,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.Routes.SerializeToString,
            ),
            'SetAcceptPlannedRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAcceptPlannedRoute,
                    request_deserializer=vedbjorn__pb2.GeneralInfoMessage.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetOngoingRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOngoingRoute,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.Routes.SerializeToString,
            ),
            'GetCompletedRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompletedRoutes,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.RoutesList.SerializeToString,
            ),
            'PushVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.PushVisit,
                    request_deserializer=vedbjorn__pb2.VisitProof.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVisit,
                    request_deserializer=vedbjorn__pb2.VisitIndex.FromString,
                    response_serializer=vedbjorn__pb2.VisitProof.SerializeToString,
            ),
            'GetDeliveryProof': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeliveryProof,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.VisitProof.SerializeToString,
            ),
            'PushFeedbackComplaintNondelivery': grpc.unary_unary_rpc_method_handler(
                    servicer.PushFeedbackComplaintNondelivery,
                    request_deserializer=vedbjorn__pb2.FeedbackComplaintNondelivery.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=vedbjorn__pb2.MessageQuery.FromString,
                    response_serializer=vedbjorn__pb2.Messages.SerializeToString,
            ),
            'GetBuyRequestNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyRequestNotification,
                    request_deserializer=vedbjorn__pb2.MessageQuery.FromString,
                    response_serializer=vedbjorn__pb2.Message.SerializeToString,
            ),
            'PushFeedbackAcceptDelivery': grpc.unary_unary_rpc_method_handler(
                    servicer.PushFeedbackAcceptDelivery,
                    request_deserializer=vedbjorn__pb2.MessageQuery.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'PushFeedbackRejectDelivery': grpc.unary_unary_rpc_method_handler(
                    servicer.PushFeedbackRejectDelivery,
                    request_deserializer=vedbjorn__pb2.FeedbackRejectDelivery.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetAllCompletedDeliveryInfoForBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCompletedDeliveryInfoForBuyer,
                    request_deserializer=vedbjorn__pb2.MessageQuery.FromString,
                    response_serializer=vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.SerializeToString,
            ),
            'GetAllCompletedDeliveryInfoForBuyerAdm': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCompletedDeliveryInfoForBuyerAdm,
                    request_deserializer=vedbjorn__pb2.MessageQuery.FromString,
                    response_serializer=vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.SerializeToString,
            ),
            'GetDeliveryReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeliveryReceipt,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetDeliveryReceiptAdm': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeliveryReceiptAdm,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetFinishedRouteReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFinishedRouteReceipt,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetFinishedRouteInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFinishedRouteInvoice,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetSellsReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellsReceipt,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetSellsInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellsInvoice,
                    request_deserializer=vedbjorn__pb2.DBQuery.FromString,
                    response_serializer=vedbjorn__pb2.File.SerializeToString,
            ),
            'GetPaymentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentInfo,
                    request_deserializer=vedbjorn__pb2.PaymentInfoQuery.FromString,
                    response_serializer=vedbjorn__pb2.PaymentInfo.SerializeToString,
            ),
            'UpdatePaymentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePaymentInfo,
                    request_deserializer=vedbjorn__pb2.PaymentInfo.FromString,
                    response_serializer=vedbjorn__pb2.PaymentInfo.SerializeToString,
            ),
            'UpdateCompany': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCompany,
                    request_deserializer=vedbjorn__pb2.Company.FromString,
                    response_serializer=vedbjorn__pb2.Company.SerializeToString,
            ),
            'GetCompany': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompany,
                    request_deserializer=vedbjorn__pb2.Company.FromString,
                    response_serializer=vedbjorn__pb2.Company.SerializeToString,
            ),
            'UpdateBatchSellRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBatchSellRequest,
                    request_deserializer=vedbjorn__pb2.BatchSellRequest.FromString,
                    response_serializer=vedbjorn__pb2.BatchSellRequest.SerializeToString,
            ),
            'GetBatchSellRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatchSellRequest,
                    request_deserializer=vedbjorn__pb2.BatchSellRequest.FromString,
                    response_serializer=vedbjorn__pb2.BatchSellRequest.SerializeToString,
            ),
            'OrderAdmMassEmails': grpc.unary_unary_rpc_method_handler(
                    servicer.OrderAdmMassEmails,
                    request_deserializer=vedbjorn__pb2.AdmMassEmails.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'SetSeasonOnOrOff': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSeasonOnOrOff,
                    request_deserializer=vedbjorn__pb2.Name.FromString,
                    response_serializer=vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            ),
            'GetSeasonOnOrOff': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSeasonOnOrOff,
                    request_deserializer=vedbjorn__pb2.Nothing.FromString,
                    response_serializer=vedbjorn__pb2.Name.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vedbjorn.VedbjornFunctions', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VedbjornFunctions(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetPrices',
            vedbjorn__pb2.Nothing.SerializeToString,
            vedbjorn__pb2.AllPrices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/SetPrices',
            vedbjorn__pb2.AllPrices.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CoordinateToLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/CoordinateToLocation',
            vedbjorn__pb2.Coordinate.SerializeToString,
            vedbjorn__pb2.Location.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NameToLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/NameToLocation',
            vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            vedbjorn__pb2.Location.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LocationToGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/LocationToGraph',
            vedbjorn__pb2.Coordinate.SerializeToString,
            vedbjorn__pb2.Location.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCoordinatesInAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/FindCoordinatesInAddress',
            vedbjorn__pb2.Location.SerializeToString,
            vedbjorn__pb2.Location.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetMarketInfo',
            vedbjorn__pb2.Location.SerializeToString,
            vedbjorn__pb2.MarketInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetUser',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/CreateUser',
            vedbjorn__pb2.User.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/DeleteUser',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyUserEmailStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/VerifyUserEmailStart',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyUserEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/VerifyUserEmail',
            vedbjorn__pb2.EmailVerificationCode.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyRequestToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/BuyRequestToUser',
            vedbjorn__pb2.BuyRequest.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetBuyRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.BuyRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyRequestMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetBuyRequestMatch',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBuyRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/DeleteBuyRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellRequestToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/SellRequestToUser',
            vedbjorn__pb2.SellRequest.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetSellRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.SellRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSellRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/DeleteSellRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewSellerDealInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetNewSellerDealInfoList',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.SellerDealInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOngoingSellerDealInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetOngoingSellerDealInfoList',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.SellerDealInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompletedSells(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetCompletedSells',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.SellerDealInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewSellerDealAccept(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetNewSellerDealAccept',
            vedbjorn__pb2.SellerDealAccept.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DriveRequestToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/DriveRequestToUser',
            vedbjorn__pb2.DriveRequest.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDriveRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetDriveRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.DriveRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDriveRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/DeleteDriveRequest',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDriverNotAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/SetDriverNotAvailable',
            vedbjorn__pb2.UserContactInfo.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShortCountryInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/ShortCountryInfo',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.Counties.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyDriverOnNewMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/NotifyDriverOnNewMission',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlannedRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetPlannedRoute',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.Routes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAcceptPlannedRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/SetAcceptPlannedRoute',
            vedbjorn__pb2.GeneralInfoMessage.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOngoingRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetOngoingRoute',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.Routes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompletedRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetCompletedRoutes',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.RoutesList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/PushVisit',
            vedbjorn__pb2.VisitProof.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetVisit',
            vedbjorn__pb2.VisitIndex.SerializeToString,
            vedbjorn__pb2.VisitProof.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeliveryProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetDeliveryProof',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.VisitProof.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushFeedbackComplaintNondelivery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/PushFeedbackComplaintNondelivery',
            vedbjorn__pb2.FeedbackComplaintNondelivery.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetMessages',
            vedbjorn__pb2.MessageQuery.SerializeToString,
            vedbjorn__pb2.Messages.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyRequestNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetBuyRequestNotification',
            vedbjorn__pb2.MessageQuery.SerializeToString,
            vedbjorn__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushFeedbackAcceptDelivery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/PushFeedbackAcceptDelivery',
            vedbjorn__pb2.MessageQuery.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushFeedbackRejectDelivery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/PushFeedbackRejectDelivery',
            vedbjorn__pb2.FeedbackRejectDelivery.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCompletedDeliveryInfoForBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetAllCompletedDeliveryInfoForBuyer',
            vedbjorn__pb2.MessageQuery.SerializeToString,
            vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCompletedDeliveryInfoForBuyerAdm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetAllCompletedDeliveryInfoForBuyerAdm',
            vedbjorn__pb2.MessageQuery.SerializeToString,
            vedbjorn__pb2.AllCompletedDeliveryInfoForBuyer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeliveryReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetDeliveryReceipt',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeliveryReceiptAdm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetDeliveryReceiptAdm',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFinishedRouteReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetFinishedRouteReceipt',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFinishedRouteInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetFinishedRouteInvoice',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellsReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetSellsReceipt',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellsInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetSellsInvoice',
            vedbjorn__pb2.DBQuery.SerializeToString,
            vedbjorn__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetPaymentInfo',
            vedbjorn__pb2.PaymentInfoQuery.SerializeToString,
            vedbjorn__pb2.PaymentInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePaymentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/UpdatePaymentInfo',
            vedbjorn__pb2.PaymentInfo.SerializeToString,
            vedbjorn__pb2.PaymentInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCompany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/UpdateCompany',
            vedbjorn__pb2.Company.SerializeToString,
            vedbjorn__pb2.Company.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetCompany',
            vedbjorn__pb2.Company.SerializeToString,
            vedbjorn__pb2.Company.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBatchSellRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/UpdateBatchSellRequest',
            vedbjorn__pb2.BatchSellRequest.SerializeToString,
            vedbjorn__pb2.BatchSellRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBatchSellRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetBatchSellRequest',
            vedbjorn__pb2.BatchSellRequest.SerializeToString,
            vedbjorn__pb2.BatchSellRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OrderAdmMassEmails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/OrderAdmMassEmails',
            vedbjorn__pb2.AdmMassEmails.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSeasonOnOrOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/SetSeasonOnOrOff',
            vedbjorn__pb2.Name.SerializeToString,
            vedbjorn__pb2.GeneralInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSeasonOnOrOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vedbjorn.VedbjornFunctions/GetSeasonOnOrOff',
            vedbjorn__pb2.Nothing.SerializeToString,
            vedbjorn__pb2.Name.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
